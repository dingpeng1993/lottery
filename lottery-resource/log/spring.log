[2019-03-05 13:38:25] INFO  ConfigurationClassPostProcessor.enhanceConfigurationClasses #  - Cannot enhance @Configuration bean definition 'mapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[2019-03-05 13:38:26] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'dataSourceConfig' of type [com.dingpeng.java.exercise.lottery.resource.config.DataSourceConfig$$EnhancerBySpringCGLIB$$1c5f6e9a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 13:38:27] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 13:38:27] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 13:38:27] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 13:38:27] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'mybatisConfig' of type [com.dingpeng.java.exercise.lottery.resource.config.MybatisConfig$$EnhancerBySpringCGLIB$$474c7ca8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 13:38:27] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 13:38:27] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$255167fe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 13:38:36] INFO  ThreadPoolTaskExecutor.initialize #  - Initializing ExecutorService 'applicationTaskExecutor'
[2019-03-05 13:38:41] WARN  ManagementContextAutoConfiguration.afterSingletonsInstantiated #  - Could not start embedded management container on different port (management endpoints are still available through JMX)
[2019-03-05 13:39:02] INFO  ThreadPoolTaskExecutor.shutdown #  - Shutting down ExecutorService 'applicationTaskExecutor'
[2019-03-05 13:40:28] INFO  ConfigurationClassPostProcessor.enhanceConfigurationClasses #  - Cannot enhance @Configuration bean definition 'mapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[2019-03-05 13:40:29] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'dataSourceConfig' of type [com.dingpeng.java.exercise.lottery.resource.config.DataSourceConfig$$EnhancerBySpringCGLIB$$2f2f690a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 13:40:30] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 13:40:30] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 13:40:30] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 13:40:30] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'mybatisConfig' of type [com.dingpeng.java.exercise.lottery.resource.config.MybatisConfig$$EnhancerBySpringCGLIB$$5a1c7718] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 13:40:30] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 13:40:30] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3821626e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 13:40:39] INFO  ThreadPoolTaskExecutor.initialize #  - Initializing ExecutorService 'applicationTaskExecutor'
[2019-03-05 13:40:43] WARN  ManagementContextAutoConfiguration.afterSingletonsInstantiated #  - Could not start embedded management container on different port (management endpoints are still available through JMX)
[2019-03-05 13:40:50] INFO  ThreadPoolTaskExecutor.shutdown #  - Shutting down ExecutorService 'applicationTaskExecutor'
[2019-03-05 13:42:00] INFO  ConfigurationClassPostProcessor.enhanceConfigurationClasses #  - Cannot enhance @Configuration bean definition 'mapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[2019-03-05 13:42:02] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'dataSourceConfig' of type [com.dingpeng.java.exercise.lottery.resource.config.DataSourceConfig$$EnhancerBySpringCGLIB$$b2c5fdac] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 13:42:02] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 13:42:03] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 13:42:03] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 13:42:03] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'mybatisConfig' of type [com.dingpeng.java.exercise.lottery.resource.config.MybatisConfig$$EnhancerBySpringCGLIB$$ddb30bba] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 13:42:03] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 13:42:03] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bbb7f710] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 13:42:11] INFO  ThreadPoolTaskExecutor.initialize #  - Initializing ExecutorService 'applicationTaskExecutor'
[2019-03-05 13:42:17] WARN  ManagementContextAutoConfiguration.afterSingletonsInstantiated #  - Could not start embedded management container on different port (management endpoints are still available through JMX)
[2019-03-05 13:42:59] INFO  ThreadPoolTaskExecutor.shutdown #  - Shutting down ExecutorService 'applicationTaskExecutor'
[2019-03-05 15:35:31] INFO  ConfigurationClassPostProcessor.enhanceConfigurationClasses #  - Cannot enhance @Configuration bean definition 'mapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[2019-03-05 15:35:32] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'dataSourceConfig' of type [com.dingpeng.java.exercise.lottery.resource.config.DataSourceConfig$$EnhancerBySpringCGLIB$$a1ecb24f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 15:35:32] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 15:35:33] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 15:35:33] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 15:35:33] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'mybatisConfig' of type [com.dingpeng.java.exercise.lottery.resource.config.MybatisConfig$$EnhancerBySpringCGLIB$$ccd9c05d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 15:35:33] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 15:35:33] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$aadeabb3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 15:35:46] INFO  ThreadPoolTaskExecutor.initialize #  - Initializing ExecutorService 'applicationTaskExecutor'
[2019-03-05 15:35:49] WARN  ManagementContextAutoConfiguration.afterSingletonsInstantiated #  - Could not start embedded management container on different port (management endpoints are still available through JMX)
[2019-03-05 15:36:15] INFO  ThreadPoolTaskExecutor.shutdown #  - Shutting down ExecutorService 'applicationTaskExecutor'
[2019-03-05 15:37:35] INFO  ConfigurationClassPostProcessor.enhanceConfigurationClasses #  - Cannot enhance @Configuration bean definition 'mapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[2019-03-05 15:37:36] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'dataSourceConfig' of type [com.dingpeng.java.exercise.lottery.resource.config.DataSourceConfig$$EnhancerBySpringCGLIB$$54820230] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 15:37:36] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 15:37:36] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 15:37:36] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 15:37:36] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'mybatisConfig' of type [com.dingpeng.java.exercise.lottery.resource.config.MybatisConfig$$EnhancerBySpringCGLIB$$7f6f103e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 15:37:36] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 15:37:37] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5d73fb94] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 15:37:40] INFO  ThreadPoolTaskExecutor.initialize #  - Initializing ExecutorService 'applicationTaskExecutor'
[2019-03-05 15:37:44] WARN  ManagementContextAutoConfiguration.afterSingletonsInstantiated #  - Could not start embedded management container on different port (management endpoints are still available through JMX)
[2019-03-05 15:37:46] INFO  ThreadPoolTaskExecutor.shutdown #  - Shutting down ExecutorService 'applicationTaskExecutor'
[2019-03-05 15:44:16] INFO  ConfigurationClassPostProcessor.enhanceConfigurationClasses #  - Cannot enhance @Configuration bean definition 'mapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[2019-03-05 15:44:17] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'dataSourceConfig' of type [com.dingpeng.java.exercise.lottery.resource.config.DataSourceConfig$$EnhancerBySpringCGLIB$$a4a29a0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 15:44:18] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 15:44:18] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 15:44:18] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 15:44:18] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'mybatisConfig' of type [com.dingpeng.java.exercise.lottery.resource.config.MybatisConfig$$EnhancerBySpringCGLIB$$353737ae] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 15:44:18] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 15:44:18] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$133c2304] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 15:44:23] INFO  ThreadPoolTaskExecutor.initialize #  - Initializing ExecutorService 'applicationTaskExecutor'
[2019-03-05 15:44:27] WARN  ManagementContextAutoConfiguration.afterSingletonsInstantiated #  - Could not start embedded management container on different port (management endpoints are still available through JMX)
[2019-03-05 15:44:28] INFO  TransactionContext.startTransaction #  - Began transaction (1) for test context [DefaultTestContext@3e11f9e9 testClass = ActivityEntityDaoTest, testInstance = com.dingpeng.java.exercise.lottery.resource.dao.ActivityEntityDaoTest@ce561cc, testMethod = testInsertOne@ActivityEntityDaoTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1de5f259 testClass = ActivityEntityDaoTest, locations = '{}', classes = '{class com.dingpeng.java.exercise.lottery.ApplicationStarter}', contextInitializerClasses = '[]', activeProfiles = '{dev}', propertySourceLocations = '{}', propertySourceProperties = '{ApplicationStarter.class, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5bd03f44, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4b0b0854, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@2667f029, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@31368b99], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@56ec6960]; rollback [true]
[2019-03-05 15:44:28] INFO  TransactionContext.endTransaction #  - Rolled back transaction for test: [DefaultTestContext@3e11f9e9 testClass = ActivityEntityDaoTest, testInstance = com.dingpeng.java.exercise.lottery.resource.dao.ActivityEntityDaoTest@ce561cc, testMethod = testInsertOne@ActivityEntityDaoTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1de5f259 testClass = ActivityEntityDaoTest, locations = '{}', classes = '{class com.dingpeng.java.exercise.lottery.ApplicationStarter}', contextInitializerClasses = '[]', activeProfiles = '{dev}', propertySourceLocations = '{}', propertySourceProperties = '{ApplicationStarter.class, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5bd03f44, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4b0b0854, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@2667f029, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@31368b99], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
[2019-03-05 15:44:29] INFO  ThreadPoolTaskExecutor.shutdown #  - Shutting down ExecutorService 'applicationTaskExecutor'
[2019-03-05 15:59:02] INFO  ConfigurationClassPostProcessor.enhanceConfigurationClasses #  - Cannot enhance @Configuration bean definition 'mapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[2019-03-05 15:59:03] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'dataSourceConfig' of type [com.dingpeng.java.exercise.lottery.resource.config.DataSourceConfig$$EnhancerBySpringCGLIB$$d96dcd14] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 15:59:03] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 15:59:04] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 15:59:04] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 15:59:04] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'mybatisConfig' of type [com.dingpeng.java.exercise.lottery.resource.config.MybatisConfig$$EnhancerBySpringCGLIB$$45adb22] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 15:59:04] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 15:59:04] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e25fc678] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 15:59:09] INFO  ThreadPoolTaskExecutor.initialize #  - Initializing ExecutorService 'applicationTaskExecutor'
[2019-03-05 15:59:13] WARN  ManagementContextAutoConfiguration.afterSingletonsInstantiated #  - Could not start embedded management container on different port (management endpoints are still available through JMX)
[2019-03-05 15:59:15] INFO  TransactionContext.startTransaction #  - Began transaction (1) for test context [DefaultTestContext@5cbe877d testClass = ActivityEntityDaoTest, testInstance = com.dingpeng.java.exercise.lottery.resource.dao.ActivityEntityDaoTest@1ead3c67, testMethod = testInsertOne@ActivityEntityDaoTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c08c46a testClass = ActivityEntityDaoTest, locations = '{}', classes = '{class com.dingpeng.java.exercise.lottery.ApplicationStarter}', contextInitializerClasses = '[]', activeProfiles = '{dev}', propertySourceLocations = '{}', propertySourceProperties = '{ApplicationStarter.class, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@21be3395, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@15d49048, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@13526e59, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@6bb4dd34], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@5e2b512b]; rollback [true]
[2019-03-05 15:59:15] INFO  TransactionContext.endTransaction #  - Rolled back transaction for test: [DefaultTestContext@5cbe877d testClass = ActivityEntityDaoTest, testInstance = com.dingpeng.java.exercise.lottery.resource.dao.ActivityEntityDaoTest@1ead3c67, testMethod = testInsertOne@ActivityEntityDaoTest, testException = org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ' description, start_time, end_time, status 
        ( activity )
        VALUES
' at line 2
### The error may involve com.dingpeng.java.exercise.lottery.resource.dao.ActivityEntityDao.insertOne-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO          name, description, start_time, end_time, status          ( activity )         VALUES         (?, ?, ?, ?,?)
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ' description, start_time, end_time, status 
        ( activity )
        VALUES
' at line 2
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ' description, start_time, end_time, status 
        ( activity )
        VALUES
' at line 2, mergedContextConfiguration = [WebMergedContextConfiguration@5c08c46a testClass = ActivityEntityDaoTest, locations = '{}', classes = '{class com.dingpeng.java.exercise.lottery.ApplicationStarter}', contextInitializerClasses = '[]', activeProfiles = '{dev}', propertySourceLocations = '{}', propertySourceProperties = '{ApplicationStarter.class, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@21be3395, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@15d49048, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@13526e59, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@6bb4dd34], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
[2019-03-05 15:59:16] INFO  ThreadPoolTaskExecutor.shutdown #  - Shutting down ExecutorService 'applicationTaskExecutor'
[2019-03-05 16:02:08] INFO  ConfigurationClassPostProcessor.enhanceConfigurationClasses #  - Cannot enhance @Configuration bean definition 'mapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[2019-03-05 16:02:09] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'dataSourceConfig' of type [com.dingpeng.java.exercise.lottery.resource.config.DataSourceConfig$$EnhancerBySpringCGLIB$$e0af0344] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 16:02:09] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 16:02:09] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 16:02:09] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 16:02:09] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'mybatisConfig' of type [com.dingpeng.java.exercise.lottery.resource.config.MybatisConfig$$EnhancerBySpringCGLIB$$b9c1152] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 16:02:10] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 16:02:10] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e9a0fca8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 16:02:15] INFO  ThreadPoolTaskExecutor.initialize #  - Initializing ExecutorService 'applicationTaskExecutor'
[2019-03-05 16:02:19] WARN  ManagementContextAutoConfiguration.afterSingletonsInstantiated #  - Could not start embedded management container on different port (management endpoints are still available through JMX)
[2019-03-05 16:02:20] INFO  TransactionContext.startTransaction #  - Began transaction (1) for test context [DefaultTestContext@681a8b4e testClass = ActivityEntityDaoTest, testInstance = com.dingpeng.java.exercise.lottery.resource.dao.ActivityEntityDaoTest@2b15ba1a, testMethod = testInsertOne@ActivityEntityDaoTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5cbe877d testClass = ActivityEntityDaoTest, locations = '{}', classes = '{class com.dingpeng.java.exercise.lottery.ApplicationStarter}', contextInitializerClasses = '[]', activeProfiles = '{dev}', propertySourceLocations = '{}', propertySourceProperties = '{ApplicationStarter.class, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@21be3395, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@15d49048, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@13526e59, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@6bb4dd34], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@796fe2b5]; rollback [true]
[2019-03-05 16:02:21] INFO  TransactionContext.endTransaction #  - Rolled back transaction for test: [DefaultTestContext@681a8b4e testClass = ActivityEntityDaoTest, testInstance = com.dingpeng.java.exercise.lottery.resource.dao.ActivityEntityDaoTest@2b15ba1a, testMethod = testInsertOne@ActivityEntityDaoTest, testException = org.opentest4j.AssertionFailedError: expected: not equal but was: <1>, mergedContextConfiguration = [WebMergedContextConfiguration@5cbe877d testClass = ActivityEntityDaoTest, locations = '{}', classes = '{class com.dingpeng.java.exercise.lottery.ApplicationStarter}', contextInitializerClasses = '[]', activeProfiles = '{dev}', propertySourceLocations = '{}', propertySourceProperties = '{ApplicationStarter.class, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@21be3395, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@15d49048, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@13526e59, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@6bb4dd34], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
[2019-03-05 16:02:21] INFO  ThreadPoolTaskExecutor.shutdown #  - Shutting down ExecutorService 'applicationTaskExecutor'
[2019-03-05 16:13:25] INFO  ConfigurationClassPostProcessor.enhanceConfigurationClasses #  - Cannot enhance @Configuration bean definition 'mapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[2019-03-05 16:13:25] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'dataSourceConfig' of type [com.dingpeng.java.exercise.lottery.resource.config.DataSourceConfig$$EnhancerBySpringCGLIB$$8f64d485] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 16:13:26] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 16:13:26] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 16:13:26] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 16:13:26] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'mybatisConfig' of type [com.dingpeng.java.exercise.lottery.resource.config.MybatisConfig$$EnhancerBySpringCGLIB$$ba51e293] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 16:13:26] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 16:13:26] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9856cde9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 16:13:32] INFO  ThreadPoolTaskExecutor.initialize #  - Initializing ExecutorService 'applicationTaskExecutor'
[2019-03-05 16:13:36] WARN  ManagementContextAutoConfiguration.afterSingletonsInstantiated #  - Could not start embedded management container on different port (management endpoints are still available through JMX)
[2019-03-05 16:13:37] INFO  TransactionContext.startTransaction #  - Began transaction (1) for test context [DefaultTestContext@5cbe877d testClass = ActivityEntityDaoTest, testInstance = com.dingpeng.java.exercise.lottery.resource.dao.ActivityEntityDaoTest@45273d40, testMethod = testInsertOne@ActivityEntityDaoTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c08c46a testClass = ActivityEntityDaoTest, locations = '{}', classes = '{class com.dingpeng.java.exercise.lottery.ApplicationStarter}', contextInitializerClasses = '[]', activeProfiles = '{dev}', propertySourceLocations = '{}', propertySourceProperties = '{ApplicationStarter.class, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@21be3395, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@15d49048, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@13526e59, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@6bb4dd34], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@2a504ea7]; rollback [true]
[2019-03-05 16:14:35] INFO  TransactionContext.endTransaction #  - Rolled back transaction for test: [DefaultTestContext@5cbe877d testClass = ActivityEntityDaoTest, testInstance = com.dingpeng.java.exercise.lottery.resource.dao.ActivityEntityDaoTest@45273d40, testMethod = testInsertOne@ActivityEntityDaoTest, testException = org.opentest4j.AssertionFailedError: expected: not equal but was: <1>, mergedContextConfiguration = [WebMergedContextConfiguration@5c08c46a testClass = ActivityEntityDaoTest, locations = '{}', classes = '{class com.dingpeng.java.exercise.lottery.ApplicationStarter}', contextInitializerClasses = '[]', activeProfiles = '{dev}', propertySourceLocations = '{}', propertySourceProperties = '{ApplicationStarter.class, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@21be3395, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@15d49048, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@13526e59, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@6bb4dd34], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
[2019-03-05 16:14:35] INFO  ThreadPoolTaskExecutor.shutdown #  - Shutting down ExecutorService 'applicationTaskExecutor'
[2019-03-05 16:15:57] INFO  ConfigurationClassPostProcessor.enhanceConfigurationClasses #  - Cannot enhance @Configuration bean definition 'mapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[2019-03-05 16:15:58] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'dataSourceConfig' of type [com.dingpeng.java.exercise.lottery.resource.config.DataSourceConfig$$EnhancerBySpringCGLIB$$e64c6bcc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 16:15:58] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 16:15:59] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 16:15:59] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 16:15:59] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'mybatisConfig' of type [com.dingpeng.java.exercise.lottery.resource.config.MybatisConfig$$EnhancerBySpringCGLIB$$113979da] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 16:15:59] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 16:15:59] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization #  - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ef3e6530] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 16:16:04] INFO  ThreadPoolTaskExecutor.initialize #  - Initializing ExecutorService 'applicationTaskExecutor'
[2019-03-05 16:16:08] WARN  ManagementContextAutoConfiguration.afterSingletonsInstantiated #  - Could not start embedded management container on different port (management endpoints are still available through JMX)
[2019-03-05 16:16:09] INFO  TransactionContext.startTransaction #  - Began transaction (1) for test context [DefaultTestContext@681a8b4e testClass = ActivityEntityDaoTest, testInstance = com.dingpeng.java.exercise.lottery.resource.dao.ActivityEntityDaoTest@4ec616d6, testMethod = testInsertOne@ActivityEntityDaoTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5cbe877d testClass = ActivityEntityDaoTest, locations = '{}', classes = '{class com.dingpeng.java.exercise.lottery.ApplicationStarter}', contextInitializerClasses = '[]', activeProfiles = '{dev}', propertySourceLocations = '{}', propertySourceProperties = '{ApplicationStarter.class, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@21be3395, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@15d49048, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@13526e59, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@6bb4dd34], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@55b45ea1]; rollback [true]
[2019-03-05 16:16:33] INFO  TransactionContext.endTransaction #  - Rolled back transaction for test: [DefaultTestContext@681a8b4e testClass = ActivityEntityDaoTest, testInstance = com.dingpeng.java.exercise.lottery.resource.dao.ActivityEntityDaoTest@4ec616d6, testMethod = testInsertOne@ActivityEntityDaoTest, testException = org.opentest4j.AssertionFailedError: expected: not equal but was: <1>, mergedContextConfiguration = [WebMergedContextConfiguration@5cbe877d testClass = ActivityEntityDaoTest, locations = '{}', classes = '{class com.dingpeng.java.exercise.lottery.ApplicationStarter}', contextInitializerClasses = '[]', activeProfiles = '{dev}', propertySourceLocations = '{}', propertySourceProperties = '{ApplicationStarter.class, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@21be3395, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@15d49048, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@13526e59, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@6bb4dd34], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
[2019-03-05 16:16:33] INFO  ThreadPoolTaskExecutor.shutdown #  - Shutting down ExecutorService 'applicationTaskExecutor'
